import requests
import re
import os

def main():
    # Ask the user for the Apple app name
    app_name = input("Enter the Apple app name: ").strip()
    
    # Use the iTunes Search API to look up the app by name.
    # The 'entity=software' parameter restricts the results to iOS apps.
    search_url = f"https://itunes.apple.com/search?term={app_name}&entity=software"
    search_response = requests.get(search_url)
    if search_response.status_code != 200:
        print("Failed to retrieve search data from the iTunes API.")
        return
    
    search_data = search_response.json()
    results = search_data.get("results", [])
    if not results:
        print("No app found with the name provided.")
        return
    
    # For simplicity, select the first result.
    first_result = results[0]
    app_id = first_result.get("trackId")
    found_app_name = first_result.get("trackName")
    print(f"Found app: {found_app_name} (ID: {app_id})")
    
    # Use the iTunes Lookup API with the app ID to get detailed information.
    lookup_url = f"https://itunes.apple.com/lookup?id={app_id}"
    lookup_response = requests.get(lookup_url)
    if lookup_response.status_code != 200:
        print("Failed to retrieve app details from the iTunes API.")
        return

    # Write the lookup response to a temporary file.
    filename = "appinfo.txt"
    with open(filename, "w", encoding="utf-8") as file:
        file.write(lookup_response.text)
    
    # Read the file content.
    with open(filename, "r", encoding="utf-8") as file:
        content = file.read()
    
    # Extract the bundle ID using a regular expression.
    # The JSON data includes a key "bundleId" with its value.
    match = re.search(r'"bundleId"\s*:\s*"([^"]+)"', content)
    if match:
        bundle_id = match.group(1)
        print("Bundle ID:", bundle_id)
    else:
        print("Bundle ID not found in the app details.")
    
    # Delete the temporary file.
    try:
        os.remove(filename)
    except OSError as e:
        print("Error deleting the temporary file:", e)

if __name__ == '__main__':
    main()
